# tmux version: 3.3a

# Set my prefix to C-j and unbind the default one.
set-option -g prefix C-j
unbind-key C-b
bind-key C-j send-prefix

set -g set-titles on

# Set the default terminal type to xterm because not all applications
# appear to get along with 256-color modes.  We can run tmux in 256
# color mode and turn it on selectively for apps that support it.
set -g default-terminal "screen-256color"

set-option -g default-command "reattach-to-user-namespace -l /usr/bin/env bash"

set -g focus-events on

# Turn off the default delay when Esc is pressed.
set -g escape-time 0

unbind-key C-o
bind-key C-o select-pane -t:.+

unbind-key -T prefix ]
bind-key -T prefix ] paste-buffer -p

bind-key s choose-session
bind-key R move-window -r

# Unbind annoying bindings
unbind-key Up
unbind-key Down
unbind-key Left
unbind-key Right

# Status bar formatting
set-window-option -g status-style fg=colour31,bg=#002b36
set-window-option -g window-status-current-style fg=colour45,bg=default,bold,underscore

set -g status-interval 5
set -g status-right-length 70
set -g status-left-length 20
set -g status-left ' '
set -g status-right ' #(~/tmux-status/tmux-status.sh ~/tmux-status/config)'
set -g status-justify left

set -g window-status-format "#I:#W#{?window_zoomed_flag,:Z,}"
set -g window-status-current-format "#I:#W#[nounderscore,nobold]#{?window_zoomed_flag,:Z,}"

set -g window-status-separator ' '

# Set both active/inactive pane borders to the same color because it
# isn't obvious which pane border half goes with which color (in the
# case of two panes).
set -g pane-border-status off

# Don't show a message on a bell
set -g visual-bell off

# Don't actually ring the bell (but still set the window attributes in
# the status bar so we know that a bell rang)
set -g bell-action none

# set -g monitor-activity on

# Select oft-used named sessions
bind-key C-g if-shell "tmux list-windows | grep mail" { select-window -t mail } {
    new-window -n 'mail' 'mutt -F ~/.muttrc-galois'
}
bind-key C-p if-shell "tmux list-windows | grep mail" { select-window -t mail } {
    new-window -n 'mail' 'mutt -F ~/.muttrc-pobox'
}
bind-key C-d if-shell "tmux list-windows | grep do" { select-window -t do } {
    new-window -n 'do' 'cd ~/src/do && cabal new-run do && cd ~/tasks && ./commit.sh'
}

bind-key C-l last-window
bind-key C-c split-window -p 25 -v "calc -d"

bind-key C-r rotate-window

bind-key k confirm-before -p "respawn window #W? (y/n)" "respawn-window -k"

# Make some chords, like C-Left and C-Right, work.
set-window-option -g xterm-keys on

# These keybindings make pane joining and splitting easier.  From:
# http://unix.stackexchange.com/questions/14300/tmux-move-window-to-pane
#
# Join a pane; enter the source window (and, optionally, pane), e.g.,
# ":0" or ":1.1"
bind-key J command-prompt -p "Join pane from:" "join-pane -s '%%'"
# Send a pane to another window; enter the destination window, e.g.,
# ":0" or "sessionName.:1"
bind-key S command-prompt -p "Send pane to:" "join-pane -t '%%'"

# Better window/split creation behavior
unbind-key c
unbind-key %
unbind-key '"'
bind-key c new-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# Easier pane resize keybindings.
bind-key -n C-M-u resize-pane -U 1
bind-key -n C-M-d resize-pane -D 1
bind-key -n C-M-l resize-pane -L 1
bind-key -n C-M-r resize-pane -R 1
bind-key -n M-space resize-pane -Z

# Config reload binding
bind-key r source-file ~/.tmux.conf

# Make it possible to automatically enter scrolling / selection mode
# on mouse wheel events!  Then dragging with the mouse causes a tmux
# selection buffer to be set.  Requires a terminal that sends mouse
# location codes (iTerm2, xterm, etc., but NOT Terminal.App).
setw -g mouse on

# Set the history limit so we get lots of scrollback.
setw -g history-limit 50000

# Add a key for opening new windows to remote hosts.
bind-key h command-prompt -p "SSH to Host:" { if-shell '[ -n "%%" ]' { new-window -n "%1" "/usr/bin/ssh %1" } }

bind-key -n M-1 select-layout even-horizontal
bind-key -n M-2 select-layout even-vertical
bind-key -n M-3 select-layout main-horizontal
bind-key -n M-4 select-layout main-vertical
bind-key -n M-5 select-layout tiled
